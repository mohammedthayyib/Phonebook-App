[{"/home/mohammed/Desktop/Phonebook/frontend/src/index.js":"1","/home/mohammed/Desktop/Phonebook/frontend/src/App.js":"2","/home/mohammed/Desktop/Phonebook/frontend/src/components/Filter.js":"3","/home/mohammed/Desktop/Phonebook/frontend/src/services/persons.js":"4","/home/mohammed/Desktop/Phonebook/frontend/src/components/Alert.js":"5","/home/mohammed/Desktop/Phonebook/frontend/src/components/PersonForm.js":"6","/home/mohammed/Desktop/Phonebook/frontend/src/components/Persons.js":"7","/home/mohammed/Desktop/Phonebook/frontend/src/components/Notification.js":"8","/home/mohammed/Desktop/Phonebook/frontend/src/components/Person.js":"9"},{"size":167,"mtime":1683612779098,"results":"10","hashOfConfig":"11"},{"size":4710,"mtime":1683623959780,"results":"12","hashOfConfig":"11"},{"size":270,"mtime":1683555978731,"results":"13","hashOfConfig":"11"},{"size":833,"mtime":1683625996174,"results":"14","hashOfConfig":"11"},{"size":119,"mtime":1683555953196,"results":"15","hashOfConfig":"11"},{"size":534,"mtime":1683556088035,"results":"16","hashOfConfig":"11"},{"size":384,"mtime":1683556289248,"results":"17","hashOfConfig":"11"},{"size":272,"mtime":1683556006997,"results":"18","hashOfConfig":"11"},{"size":217,"mtime":1683556029280,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"1dh7p0c",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mohammed/Desktop/Phonebook/frontend/src/index.js",["49"],[],"import ReactDOM from 'react-dom';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\n\ncreateRoot(document.getElementById('root')).render(<App />);","/home/mohammed/Desktop/Phonebook/frontend/src/App.js",["50"],[],"import React, { useEffect, useState } from 'react'\n\nimport Alert from './components/Alert'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  const getAllHook = () => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n      .catch(error => \n        console.error(error)\n      )\n  }\n\n  useEffect(getAllHook, [null])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const checkPerson = persons.find(person => \n      person.name.toLowerCase() === personObject.name.toLowerCase())\n\n    if (checkPerson && checkPerson.number === newNumber) {\n      Alert(personObject)      \n    } \n    if (checkPerson && checkPerson.number !== newNumber) {\n      const confirmNewNumber = window.confirm(`Are you sure you want update ${checkPerson.name}'s number with a new one?`)\n      \n      if (confirmNewNumber) {\n        const personUpdate = { ...checkPerson, number: newNumber }\n        personService\n          .update(checkPerson.id, personUpdate)\n          .then(returnedPerson =>{\n            setPersons(\n              persons\n                .map(person =>\n                  person.id !== checkPerson.id \n                    ? person \n                    : returnedPerson\n              )\n            )\n            setNotification({\n              text: `${checkPerson.name}'s number was updated.`,\n              type: 'notification'\n            })\n            setTimeout(() => setNotification(null), 5000)      \n          })\n          .catch(error =>\n            setPersons(persons\n              .filter(person => \n                person.name !== checkPerson.name\n              )\n            )\n          )\n            setNotification({\n              text: `${checkPerson.name} has already been deleted from the server.`,\n              type: 'error'\n            })\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n      }\n    } \n    if (!checkPerson) {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n        })\n        .catch(error => {\n          setNotification({\n            text: error.response.data.error, \n            type: 'error'\n          })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n      setNotification({\n        text: `${personObject.name} added to the phonebook.`,\n        type: 'notification'\n      })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(p => p.id === id)\n    const confirmDelete = window.confirm(`Are you sure you want to delete ${person.name}?`)\n    \n    if (confirmDelete) {\n      personService\n        .remove(id)\n        .then(returnedPerson => {\n          persons.map(person => person.id !== id ? person : returnedPerson)\n        })\n      setPersons(persons.filter(person => person.id !== id))\n      setNotification({\n        text: `${person.name} was deleted from the phonebook.`,\n        type: 'notification'\n      })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const personsAfterFilter = \n    filter === ''  ? persons : persons.filter(person => \n      person.name.toLowerCase().includes(filter.toLowerCase()))\n\n      return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter\n        filter={filter}\n        handleFilter={handleFilter}\n      />\n      <h3>Add a new</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={personsAfterFilter}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","/home/mohammed/Desktop/Phonebook/frontend/src/components/Filter.js",[],[],"/home/mohammed/Desktop/Phonebook/frontend/src/services/persons.js",[],[],"/home/mohammed/Desktop/Phonebook/frontend/src/components/Alert.js",[],[],"/home/mohammed/Desktop/Phonebook/frontend/src/components/PersonForm.js",[],[],"/home/mohammed/Desktop/Phonebook/frontend/src/components/Persons.js",[],[],"/home/mohammed/Desktop/Phonebook/frontend/src/components/Notification.js",[],[],"/home/mohammed/Desktop/Phonebook/frontend/src/components/Person.js",[],[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":16},{"ruleId":"55","severity":1,"message":"56","line":29,"column":26,"nodeType":"57","endLine":29,"endColumn":30},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The null literal is not a valid dependency because it never changes. You can safely remove it.","Literal"]